const main = async () => {
    const nftContractFactory = await hre.ethers.getContractFactory('MyEpicNFT');
    const nftContract = await nftContractFactory.deploy();
    await nftContract.deployed();
    console.log("Contract deployed to", nftContract.address);
  
    let txn = await nftContract.makeAnEpicNft("data:application/json;base64,ew0KICAgICJuYW1lIjogIkFCU1RSQUNUIiwNCiAgICAiZGVzY3JpcHRpb24iOiAiQUJTVFJBQ1QiLA0KICAgICJpbWFnZSI6ICJkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSGh0YkRwemNHRmpaVDBpY0hKbGMyVnlkbVVpSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJK1BHbHRZV2RsSUhkcFpIUm9QU0l5TkNJZ2FHVnBaMmgwUFNJeU5DSWdhSEpsWmowaVpHRjBZVHBwYldGblpTOXdibWM3WW1GelpUWTBMR2xXUWs5U2R6QkxSMmR2UVVGQlFVNVRWV2hGVldkQlFVRkNaMEZCUVVGWlEwRkpRVUZCUW5aR1lYRjJRVUZCUVVsSFRrbFZhekJCUVVodmJVRkJRMEZvUVVGQksyZEJRVUZKUkc4Z1FVRkNNVTFCUVVFMmJVRkJRVVJ4V1VGQlFWaGpTbmsyVlZSM1FVRkJRVWRaYTNSSVVrRkVMMEZRT0VFdk5rTTVjRFZOUVVGQlFtVmtSVlpaWkVaS2FHUjVRbmRqYlRsdFlWZDRiQ0JKU0ZJMVkwZFZaMDlIU25CaVVVRkxUMGRLY0dKUmIyZEpRMEZuU1VOQmVVOUJiM3BQUkZGNVRrUnJNRnBFUVRCTmFsVjNUVVJCZDAxRVFYZE5SRUYzVFZSQ2EwNUVSbXRQUjA1cklFOVVhRzFOUkVKcFRXcEJNRnBVYXpSTlJFRTFUMVJvYkZreVdUUk9SRWt6V2xGeFMxcFJVak5CUVVGQ1lUTndWVmRJVWxOWldHTm5ZMGhLZGxwdGJITmFVMEl3WlZoQ2JFbElhSFFnWTBGQlFWZEpXSFJYUkVaNWVFTkJUVGRJYkVadVowSmhhMUJDZW1KQlRtUmFiRXh0SzFadWFIaE5iR1IxY0ZGYWNrSnJPSEpMVkZaVGJsRkxOelk1ZGpSWlYyWnZRMFJuZUV4Q2NTQlZXazVEUkhreVYwcGhjRzlWWkU1T1R6VndTVWc0WkhoRVFraHBiVEphU0dseFNHdG9jR2xpZUZGNlIxWjBNVU55Y2xsaVJYZDBjM28zTVdzMVdpdEZRVXBPUlUxT1FXdzBjbE5MSUROaGIzbFZXbk5ZTUhsVVVqY3pjSEZPTjJkMlpVRlhjWGxVY0dOQ0wySk1ZMWxrVUVwa09EQjRRVGRRZVVobFIzaEdTbnBMZWtkSmFYaHpNa2xTVkhCVlIyNVZhelZCVW1sU1p6SWdXV2R0UzFOTFVXZDVWV3hWWlVWemQwZG1RV05RZWxaSmJTdEVUMnN6VlZwUmRFWlFTbkF2ZEVOV1ZXODVhVWsxV2pNeGNWUmpTakJsYm5aV1RXa3hhVnA2ZGtRMWFXWmtSME5XT1NCTGRtSTJRMXAyWWpGRFFUaG9WMlUzUTJ4RFVuZG1aeXRRYUVkeVlrbHpWak5RSzI5bmFFdzBWa2gzU1RCWE1VOWhkVTlGUjFCSWJERjRVVFJ6UjBWamNrdHpVM0o2U1VwYVJIY3lJR054VHk5WWN6ZzVZblZJV0ZKUU5XOXBNbWRTVEdGS1JuUkpaMWN3VTBwaFVrbDBiMFZUTW1sU1lsTkpSblJGYVN0c09VVlFNMlJRTkZZMEswWmxNMWh0YzI1ek1taDFSa1F5WVZjZ2NFYzFOMWh1VUdaQlFVRkhaVVZzUlZGV1VUUjVkMWhDWVRCM1lqbDNSVUU0VUNzNVlrNHJaSG9yS3pOM1VtcE5UVFpHWjIxclFYQktjbFJSU1ZweGJGUldkbEk1YzA4eVRIQnlWeUJVYkhaWFUxWk5NWEZWU25Gd1YydG1TbXN6WW5SREsxUTViVWRoY0c0eVdVNUZNVlF3TUZwd01EWjZUbXR4YVZGRlNrbFJTMGRFVFhsM1lVUnFXREV6VUhBdlVEbHlNVGhxTHpFcklEQk5PUzlqWmxZM2NqY3hNWE5NU3pGMVpsTnZUbmg2THpoaE9TdDVWRmRhYUdRNU9FaFFWRFpHYmpjek1uaFBZbmxrWVVVdldXUlFWRGxKTnpKVmVEWm1iamNyTldSa1pVRlJZalFnTlhSeFdDOHZOMGd6ZURCWlQzQlpZWFl2ZWpKUVQxUXpVWEZhZFV0c2Vub3JkQzhyZFZocWFqWjNSR3hWWjNoV1l6WkVUMnRHWkZSV1RsUnllVTl5ZVZwdFlraGhNWEZOVjJvd1VpQnFXWGxQYW1WUUswbEdUWEZHT1ZCaWNEbHRSR2xOT1VoVloxSkRSVkZvYUZFMFJVODRjRzFxZUROalpsbFNjV2xwYTNCcFNVeEdXRTlxZWxveWVHTldNbE15U0ZSNmJYVXdLMFl5SURZMVlWZEVSMFpXV21WWWJTODRhRFJFUTJaelZFcElSa1ZZU2paaGFtRllVSGx5Vm1GM2MweERkMmR6V1djdmRVeHpiMDAzZVV0dmN6aHVhR3BpTVU0elJUSnZjMEZpWW5OSlIxSWdjRUUyUVhvclZ6bFBSRzA1T1ZkVE9VczVTVmREUVZvdk9IWTFVRXQzZUhwdVRtNUVWV0YzYkhFdmMwaG9Oa1p2WWtoU2RVTnhOVXA2WlRrNE9USlhRVWx2UkVGemNGZERXa2xXZWlCaVMwVlBZU3MyUW1WSldYUnJTRGRtZFRGbGRqTnVkakF5UWxkS2RXMUxlSGhQUTBGaFdXY3hOM05xVVdoSFprOUtUSGhQVTJ4WGEzcFpNazVFTmpZNGFqbDRaaXQxWWpCUFRDc3JJRGxOUVhjNVdVZDRiMk16WTJSeWR6ZEtjRzFoVTIxTFUxbG1lbTk1Y25SVFZGWnRObk0wVkVOeFN6ZHdSbWwyTmxsUWJHVk5XRGxaVEdKRlJXRnFka3RJYkdNMVVHaGhVRmN5TURJZ1YwcExORnB3VFVwb1VuY3JSRE5zTXpoWVdsaGtNR1I1WlVGb1JEQkRja2g2T0RkUFNGZFpUeTkyZWpkUUwwWk5kR0l5ZEUwM1RucEZSek4yTlU5cFIzZExiVVJCSzJaRGQxaHFjQ0JzU2pFMVdXVmhhbEF2TjJodmR6Z3ZVVWhGU0ZkcVp6a3dTRkpLVFN0VFQzcHFZbE5VWTIxcE1VcEthekIxVURnMVJpOHZVMVJvYW1sTGFXWTJaWGgxUkRSaFpuVm1TazkxVmxGVElHVkNSVVl4YTFwa2IxaFZkVzFWZVNzcmRXOXNXVUZXY3l0UlVUSm5UR2xsV0hFelNsQkZRVTVETWpRNVpTOWljM1EyZEZCTlVqRlRLMlZhYnpNMVFsVTFiWGxoVFZwbE5sVkVhbGtnVnpkd016VTJkV0pPZWpGMWJqaFdRMHBNY2pkS1JtczVTMUprZDNsbldtYzNZM1JpYmpoSWNrY3lkV05WU0VWSE0wSmhiblpYV0hGaE1DOVljbGxuVGpaUFJGaElNelJqWkhaMFJpQnZWaloyVm0wNVl5OHZWQ3RuTTNOeGEwOUxPVGRTYVV0cFp6RjRXUzlPWW5aelJrNVVSRFpRTW1SRmRpOTJiMWh3TkdSRksyZG1haXRrZDBwd1MxQktPREpQTjNWaWVHMUJRbEZuSUVKclFWRkRNMkp5ZGpFNFduRjJTSE4xVWtkamMyeHJaRlpxU210TU1WaHZhMDUxVEVGWlJHcHRUbVp1WmtnekswMXNUWEF6Vm0wNFVHWnVhVXBGY0c1VE0ySk5SSEIxVjJkRUwzTWdiMVUxV214c1RUQk5OV1pNUjFSd1VTdE1jbEEyWldaeVFXd3dPRGx5WTBaWVJVZFFNVlUzYjNCNWNVWlZkMFJUVEVaWk1HVXphbmRhU0RCc1pGZEZlVEJrVDBobVNEbHRhbXBzYVNCTVFVUk1TSGhST0d4TWRWbDZWU3R1VEdoRFNUVllaeTgxZVZGalEwbDVTa1JTUlc5UGF6UlRhRkZ4ZEV0UllUZFlNbUZRTWxWTGFHRkJTbm8xWmtWcVNGUkpkWFl2UlVkbmFVaEpJRlpIU2xGeFRsRm5RMGxOVFZKQ1JteFVaR0p6U2tOR2QxWlpaa1kxY2tKU1VYSXpXbUpOYjBWcVVFVmpibmtyWms5cGJETTBObFJ4Y0RsNlpHbG1hakI2UVZWa2RFNDNOVFJSTDJNZ1dHcGpSVUZHZWs5R01rVkVUbXN5YjI4MmMzSjJZbTUwT1ZodmVtMVJlRlJ3YUhNd016SlJSa2MwVEVSTGFWTjZSV2x5UTBVd1RWUnplRTE2V1ZvNGJraExRV05zUjFZeFpGSnRRaUJrV1dOa1JqZG5TMU5zUlhkd1RVVXlNVVJ5TVdaRGJ6Rk9halE0VUVoNWJYSTVPVTVWV1dKWFRXMURPVWxrVlZFeFRWRktURUpxTVc1dUwzVXlaa2g2YnpWVlUzSlhiMU5TYlVKMElEZGFSbWs0VjFJMlpXaHhNekpuYVhKVVUzcFVlVVpTYzNGTFZ6QnhhbE01T1c1VFRsbFJVM1YzYldRemREUk5hR1FyT1hkSU1ucEliVU52WkdGMlpHSXpSa0pPY1RjM05UVjFkV1lnWm1adlNsaFROVlJJY0daaFlXZFhRMGxWVUZoUEswbGtiVUpZWkRNNWRFSmFWV3RNYUVGT1ZtNXROakpYY21wRU0zcDJVV3A1VDNSMmFrNWtNalJYUkZWRVZHbFZWVmhPWVZCWlRTQTVSRTFOWnpCbFJEbFRiMWhxWTJZMFVtNHhlVWxuVlVSUVdtWmtVbGRDUlVWYWRHRlRORmgwU0c5a2NHZG1NWFEwVlVKaVNrcGliMjlMZEUxMFUwVmpTR2d2ZUZCS0wwdzFVMWx1SUVweVUxZHFiSFZLTlRnMlRtTmxiR1IxVTIxTWFsVlphMFpQZUVwNFEwMUNaalZYYUdkaGJrSlJUaTltTWpSSVltVnFkbmx3VWxCalUxRmlZVkVyUjA4MlFXeGtjRVozVlZweVZWRWdaSEJMYlRaVmNXeEpaMmREVnpKaVVHNTRkbVpZUlN0VVQwWnRjakVyWTNWWWRsUTBMMGcyZG5neFJGWnlVMlZ5VEUweWQweEJNMnBNYUhkc1ZWWTBVMEZCWWtKUFFrdE9Vak5WV1NBeFFWUkNUazB6TlN0aVkza3lOM00wVkhVM2RGcGxPSFpNY1RoelVERmFSVXhTWW5ZM2RYSjBRbmRCZVZSaGFrTmpkR1YxV0ZoMk5EaExTRmhHTkVOUVV5OXVhelpKYVVaelEwWlhJSFJJZFdjMU56Sm1kbFZqTmxOQlRVTkxTWEZ0Vldsc2RuZE9MMVl4VWpOMk4zRnNkM2QyTlU5VWJHRXdjMlJSVEZoR00ybGhNa2t5WkRKNVlVVkpSVGRTUmxWa1NFSnNRbTB4U1hvZ1JtODROVmhRWVhSdVpERk1OMVZJUTJwcVprVjFiVzV2VERjd05ITTNZVEpHWjJkRlMyNTRkR0oyV1ZOVlRVZDVXakJXVnpsQ2RUTmliaThyT1ZJd1VFUkpUbTFJVlVwM1pubHFVeUF3ZFVaWmIyY3JSMVZGYWxKc1IxRjVNbHBUYkhSeE56UmtiV0Z5U1ZSWlVrSktiV0p0TUhWdU1IbFNiRkI2ZWswMU5EaE1NWG92TDI5MFJWRkhkekpTWTNaek1FRkpiWGxHYjIweUlGUTRLemhvUjBaWGRYTnlXbTkxTXk5Q2VVNVNWWGhQY1V0cVRuSkJRVUZCU2xoU1JsZElVbXRaV0ZKc1QyMU9lVnBYUmpCYVVVRjVUVVJKZVV4VVFYaE1WRWt3VmtSQmVrOXFTVE1nVDJwUmVVdDZRWHBQYWtGM09IcHRUa2xSUVVGQlExWXdVbFpvTUZwSFJqQmFWSEIwWWpKU2NGcHVhMEZOYWtGNVRXa3dkMDFUTUhsT1JsRjNUWHB2ZVU1NmJ6Qk5hWE4zVFhwdmR5Qk5TVXByVGxvd1FVRkJRVUZUVlZaUFVrczFRMWxKU1QwaUx6NDhMM04yWno0PSINCn0NCg==")
    await txn.wait()
    console.log("Minted #1")

  };
  
  const runMain = async() => {
    try {
      await main();
      process.exit(0);
    }catch(error) {
      console.log(error);
      process.exit(1);
    }
  };
  
  runMain();